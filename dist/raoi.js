var Raoi;(()=>{"use strict";var t={d:(e,i)=>{for(var s in i)t.o(i,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:i[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};(()=>{function i(t){return!("function"!=typeof t||!/^\s*class\s+/.test(t.toString()))||(console.error("Raoi error: Register type must be a class declaration"),!1)}t.d(e,{default:()=>o});class s{constructor(t=void 0){this.t=-1,this.i=void 0,this.h=void 0,this.u=new Map,void 0!==t&&i(t)&&(this.i=t)}l(t){return void 0===t||("object"!=typeof t||Array.isArray(t)||null===t?(console.error(`Raoi error: Register can only hold objects, but variable was of type '${null===t?"null":typeof t}'`),!1):void 0===this.i||t instanceof this.i||(console.error(`Raoi error: Register can only hold objects of type '${this.i.toString().substring(0,this.i.toString().indexOf(" {"))}', but object was of type '${t.constructor.name}'`),!1))}p(t){return!("number"!=typeof t||t<0||(0|t)!==t)||(console.error(`Raoi error: id '${t}' is not valid, must be integer >= 0`),!1)}v(t){return!(!Array.isArray(t)||2!==t.length||0!==t[0]&&1!==t[0]||!t[1])}R(t,e,i){return void 0!==t&&(i||!this.j()?this.u.set(e,[0,t]):this.u.set(e,[1,new WeakRef(t)]),!0)}push(t=void 0,e=!1){return this.l(t)||(t=void 0),this.R(t,++this.t,e),this.t}set(t,e,i=!1){return!!this.l(t)&&!!this.p(e)&&(e>this.t&&(this.t=e),this.R(t,e,i),!0)}get(t){if(this.p(t)){let e=this.u.get(t);if(e)if(this.v(e)){let t=0===e[0]?e[1]:e[1].deref();if(this.l(t))return t}else this.u.delete(t)}}find(t){if(this.l(t)){let e=[];for(let[i,s]of this.u.entries())this.v(s)?t===(0===s[0]?s[1]:s[1].deref())&&e.push(i):this.u.delete(i);if(e.length)return e.sort((function(t,e){return t-e}))}}delete(t){return!!this.p(t)&&this.u.delete(t)}j(){if(void 0===this.h){this.h=!0;try{new WeakRef(new Object)}catch(t){this.h=!1}}return this.h}export(){let t=[];for(let[e,i]of this.u.entries())this.v(i)?t.push({id:e,type:0===i[0]?"strong":"weak",object:0===i[0]?i[1]:i[1].deref()}):this.u.delete(e);return{index:this.t,records:t}}import(t,e=!0){if(!this._(t))return!1;e&&t.index>this.t&&(this.t=t.index);for(let e of t.records)this.k(e)&&this.set(e.object,e.id,"strong"===e.type);return!0}_(t){return!!(t.hasOwnProperty("index")&&this.p(t.index)&&t.hasOwnProperty("records")&&Array.isArray(t.records))}k(t){return!!(t.hasOwnProperty("id")&&this.p(t.id)&&t.hasOwnProperty("type")&&("strong"===t.type||"weak"===t.type)&&t.hasOwnProperty("object")&&this.l(t.object))}}class r{static get Register(){return s}static new(t=void 0){return new s(t)}static push(t=void 0,e=!1){return r.m.push(t,e)}static set(t,e,i=!1){return r.m.set(t,e,i)}static get(t,e=void 0){let s=r.m.get(t);if(s&&(void 0===e||i(e)&&s instanceof e))return s}static find(t){return r.m.find(t)}static delete(t){return r.m.delete(t)}}r.m=new s;const o=r})(),Raoi=e.default})();